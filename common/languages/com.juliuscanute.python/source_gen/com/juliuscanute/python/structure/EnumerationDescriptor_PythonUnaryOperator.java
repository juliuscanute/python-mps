package com.juliuscanute.python.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_PythonUnaryOperator extends EnumerationDescriptorBase {

  public EnumerationDescriptor_PythonUnaryOperator() {
    super(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906cL, "PythonUnaryOperator", "r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5102513431032467564");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_unMinus_0 = new EnumerationDescriptor.MemberDescriptor("unMinus", "-", 0x46cfc4ee6659906dL, "r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5102513431032467565");
  private final EnumerationDescriptor.MemberDescriptor myMember_unPlus_0 = new EnumerationDescriptor.MemberDescriptor("unPlus", "+", 0x46cfc4ee6659906eL, "r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5102513431032467566");
  private final EnumerationDescriptor.MemberDescriptor myMember_unInvert_0 = new EnumerationDescriptor.MemberDescriptor("unInvert", "~", 0x46cfc4ee66599071L, "r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5102513431032467569");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906cL, 0x46cfc4ee6659906dL, 0x46cfc4ee6659906eL, 0x46cfc4ee66599071L);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_unMinus_0, myMember_unPlus_0, myMember_unInvert_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return myMember_unMinus_0;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "unMinus":
        return myMember_unMinus_0;
      case "unPlus":
        return myMember_unPlus_0;
      case "unInvert":
        return myMember_unInvert_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
