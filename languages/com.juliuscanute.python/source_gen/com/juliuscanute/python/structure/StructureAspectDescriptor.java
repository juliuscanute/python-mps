package com.juliuscanute.python.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptDottedName = createDescriptorForDottedName();
  /*package*/ final ConceptDescriptor myConceptFromStatement = createDescriptorForFromStatement();
  /*package*/ final ConceptDescriptor myConceptFromStatementAsName = createDescriptorForFromStatementAsName();
  /*package*/ final ConceptDescriptor myConceptImportStatement = createDescriptorForImportStatement();
  /*package*/ final ConceptDescriptor myConceptImportStatementAsName = createDescriptorForImportStatementAsName();
  /*package*/ final ConceptDescriptor myConceptName = createDescriptorForName();
  /*package*/ final ConceptDescriptor myConceptPythonArrayExpression = createDescriptorForPythonArrayExpression();
  /*package*/ final ConceptDescriptor myConceptPythonAssignmentExpression = createDescriptorForPythonAssignmentExpression();
  /*package*/ final ConceptDescriptor myConceptPythonBinaryExpression = createDescriptorForPythonBinaryExpression();
  /*package*/ final ConceptDescriptor myConceptPythonCallExpression = createDescriptorForPythonCallExpression();
  /*package*/ final ConceptDescriptor myConceptPythonClassStatement = createDescriptorForPythonClassStatement();
  /*package*/ final ConceptDescriptor myConceptPythonElseIfStatement = createDescriptorForPythonElseIfStatement();
  /*package*/ final ConceptDescriptor myConceptPythonExpression = createDescriptorForPythonExpression();
  /*package*/ final ConceptDescriptor myConceptPythonExpressionStatement = createDescriptorForPythonExpressionStatement();
  /*package*/ final ConceptDescriptor myConceptPythonForStatement = createDescriptorForPythonForStatement();
  /*package*/ final ConceptDescriptor myConceptPythonFunctionDefinitionStatement = createDescriptorForPythonFunctionDefinitionStatement();
  /*package*/ final ConceptDescriptor myConceptPythonIdentifier = createDescriptorForPythonIdentifier();
  /*package*/ final ConceptDescriptor myConceptPythonIdentifierReference = createDescriptorForPythonIdentifierReference();
  /*package*/ final ConceptDescriptor myConceptPythonIfElseStatement = createDescriptorForPythonIfElseStatement();
  /*package*/ final ConceptDescriptor myConceptPythonIndentBlockStatement = createDescriptorForPythonIndentBlockStatement();
  /*package*/ final ConceptDescriptor myConceptPythonLeftHandSideExpression = createDescriptorForPythonLeftHandSideExpression();
  /*package*/ final ConceptDescriptor myConceptPythonLiteral = createDescriptorForPythonLiteral();
  /*package*/ final ConceptDescriptor myConceptPythonLogicalExpression = createDescriptorForPythonLogicalExpression();
  /*package*/ final ConceptDescriptor myConceptPythonMemberExpression = createDescriptorForPythonMemberExpression();
  /*package*/ final ConceptDescriptor myConceptPythonNode = createDescriptorForPythonNode();
  /*package*/ final ConceptDescriptor myConceptPythonNumericLiteral = createDescriptorForPythonNumericLiteral();
  /*package*/ final ConceptDescriptor myConceptPythonObjectExpression = createDescriptorForPythonObjectExpression();
  /*package*/ final ConceptDescriptor myConceptPythonProgram = createDescriptorForPythonProgram();
  /*package*/ final ConceptDescriptor myConceptPythonProperty = createDescriptorForPythonProperty();
  /*package*/ final ConceptDescriptor myConceptPythonReturnStatement = createDescriptorForPythonReturnStatement();
  /*package*/ final ConceptDescriptor myConceptPythonStatement = createDescriptorForPythonStatement();
  /*package*/ final ConceptDescriptor myConceptPythonStringLiteral = createDescriptorForPythonStringLiteral();
  /*package*/ final ConceptDescriptor myConceptPythonTupleExpression = createDescriptorForPythonTupleExpression();
  /*package*/ final ConceptDescriptor myConceptPythonUnaryExpression = createDescriptorForPythonUnaryExpression();
  /*package*/ final ConceptDescriptor myConceptPythonVariableDeclarator = createDescriptorForPythonVariableDeclarator();
  /*package*/ final ConceptDescriptor myConceptPythonWhileStatement = createDescriptorForPythonWhileStatement();
  /*package*/ final EnumerationDescriptor myEnumerationPythonAssignmentOperator = new EnumerationDescriptor_PythonAssignmentOperator();
  /*package*/ final EnumerationDescriptor myEnumerationPythonBinaryOperator = new EnumerationDescriptor_PythonBinaryOperator();
  /*package*/ final EnumerationDescriptor myEnumerationPythonLogicalOperator = new EnumerationDescriptor_PythonLogicalOperator();
  /*package*/ final EnumerationDescriptor myEnumerationPythonUnaryOperator = new EnumerationDescriptor_PythonUnaryOperator();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatype_PythonDoubleStringCharacters = new ConstrainedStringDatatypeDescriptorImpl(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x6b3be8de93319e1cL, "_PythonDoubleStringCharacters", "r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/7727025628334104092", "([^\"\\\\]|\\\\((['\"\\\\bfnrtv]|[^'\"\\\\bfnrtv0-9xu])|0|x[0-9a-fA-F][0-9a-fA-F]|u[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F]))*");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatype_PythonIdentifierName = new ConstrainedStringDatatypeDescriptorImpl(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x2bc918a81333994dL, "_PythonIdentifierName", "r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/3155080124105464141", "[a-zA-Z_$][a-zA-Z_$0-9\\.]*");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatype_PythonNumericLiteralType = new ConstrainedStringDatatypeDescriptorImpl(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee665e569fL, "_PythonNumericLiteralType", "r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5102513431032780447", "0[xX][0-9a-fA-F]+|([0-9]+\\.[0-9]*|\\.?[0-9]+)([eE][+-]?[0-9]*)?|Infinity|NaN");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatype_PythonSingleStringCharacters = new ConstrainedStringDatatypeDescriptorImpl(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x6b3be8de93319f1dL, "_PythonSingleStringCharacters", "r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/7727025628334104349", "([^'\\\\]|\\\\((['\"\\\\bfnrtv]|[^'\"\\\\bfnrtv0-9xu])|0|x[0-9a-fA-F][0-9a-fA-F]|u[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F]))*");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptDottedName, myConceptFromStatement, myConceptFromStatementAsName, myConceptImportStatement, myConceptImportStatementAsName, myConceptName, myConceptPythonArrayExpression, myConceptPythonAssignmentExpression, myConceptPythonBinaryExpression, myConceptPythonCallExpression, myConceptPythonClassStatement, myConceptPythonElseIfStatement, myConceptPythonExpression, myConceptPythonExpressionStatement, myConceptPythonForStatement, myConceptPythonFunctionDefinitionStatement, myConceptPythonIdentifier, myConceptPythonIdentifierReference, myConceptPythonIfElseStatement, myConceptPythonIndentBlockStatement, myConceptPythonLeftHandSideExpression, myConceptPythonLiteral, myConceptPythonLogicalExpression, myConceptPythonMemberExpression, myConceptPythonNode, myConceptPythonNumericLiteral, myConceptPythonObjectExpression, myConceptPythonProgram, myConceptPythonProperty, myConceptPythonReturnStatement, myConceptPythonStatement, myConceptPythonStringLiteral, myConceptPythonTupleExpression, myConceptPythonUnaryExpression, myConceptPythonVariableDeclarator, myConceptPythonWhileStatement);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.DottedName:
        return myConceptDottedName;
      case LanguageConceptSwitch.FromStatement:
        return myConceptFromStatement;
      case LanguageConceptSwitch.FromStatementAsName:
        return myConceptFromStatementAsName;
      case LanguageConceptSwitch.ImportStatement:
        return myConceptImportStatement;
      case LanguageConceptSwitch.ImportStatementAsName:
        return myConceptImportStatementAsName;
      case LanguageConceptSwitch.Name:
        return myConceptName;
      case LanguageConceptSwitch.PythonArrayExpression:
        return myConceptPythonArrayExpression;
      case LanguageConceptSwitch.PythonAssignmentExpression:
        return myConceptPythonAssignmentExpression;
      case LanguageConceptSwitch.PythonBinaryExpression:
        return myConceptPythonBinaryExpression;
      case LanguageConceptSwitch.PythonCallExpression:
        return myConceptPythonCallExpression;
      case LanguageConceptSwitch.PythonClassStatement:
        return myConceptPythonClassStatement;
      case LanguageConceptSwitch.PythonElseIfStatement:
        return myConceptPythonElseIfStatement;
      case LanguageConceptSwitch.PythonExpression:
        return myConceptPythonExpression;
      case LanguageConceptSwitch.PythonExpressionStatement:
        return myConceptPythonExpressionStatement;
      case LanguageConceptSwitch.PythonForStatement:
        return myConceptPythonForStatement;
      case LanguageConceptSwitch.PythonFunctionDefinitionStatement:
        return myConceptPythonFunctionDefinitionStatement;
      case LanguageConceptSwitch.PythonIdentifier:
        return myConceptPythonIdentifier;
      case LanguageConceptSwitch.PythonIdentifierReference:
        return myConceptPythonIdentifierReference;
      case LanguageConceptSwitch.PythonIfElseStatement:
        return myConceptPythonIfElseStatement;
      case LanguageConceptSwitch.PythonIndentBlockStatement:
        return myConceptPythonIndentBlockStatement;
      case LanguageConceptSwitch.PythonLeftHandSideExpression:
        return myConceptPythonLeftHandSideExpression;
      case LanguageConceptSwitch.PythonLiteral:
        return myConceptPythonLiteral;
      case LanguageConceptSwitch.PythonLogicalExpression:
        return myConceptPythonLogicalExpression;
      case LanguageConceptSwitch.PythonMemberExpression:
        return myConceptPythonMemberExpression;
      case LanguageConceptSwitch.PythonNode:
        return myConceptPythonNode;
      case LanguageConceptSwitch.PythonNumericLiteral:
        return myConceptPythonNumericLiteral;
      case LanguageConceptSwitch.PythonObjectExpression:
        return myConceptPythonObjectExpression;
      case LanguageConceptSwitch.PythonProgram:
        return myConceptPythonProgram;
      case LanguageConceptSwitch.PythonProperty:
        return myConceptPythonProperty;
      case LanguageConceptSwitch.PythonReturnStatement:
        return myConceptPythonReturnStatement;
      case LanguageConceptSwitch.PythonStatement:
        return myConceptPythonStatement;
      case LanguageConceptSwitch.PythonStringLiteral:
        return myConceptPythonStringLiteral;
      case LanguageConceptSwitch.PythonTupleExpression:
        return myConceptPythonTupleExpression;
      case LanguageConceptSwitch.PythonUnaryExpression:
        return myConceptPythonUnaryExpression;
      case LanguageConceptSwitch.PythonVariableDeclarator:
        return myConceptPythonVariableDeclarator;
      case LanguageConceptSwitch.PythonWhileStatement:
        return myConceptPythonWhileStatement;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationPythonAssignmentOperator, myEnumerationPythonBinaryOperator, myEnumerationPythonLogicalOperator, myEnumerationPythonUnaryOperator, myCSDatatype_PythonDoubleStringCharacters, myCSDatatype_PythonIdentifierName, myCSDatatype_PythonNumericLiteralType, myCSDatatype_PythonSingleStringCharacters);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForDottedName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "DottedName", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x35a661b8fcb37ea1L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonNode", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee66582d22L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/3865884777285648033");
    b.version(2);
    b.aggregate("names", 0x35a661b8fcb37ea2L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac74a5a6L).optional(false).ordered(true).multiple(true).origin("3865884777285648034").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFromStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "FromStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x68c84a182a2aa0cdL);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6658c91bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/7550366242933743821");
    b.version(2);
    b.aggregate("dottedName", 0x68c84a182a2aa0ceL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x35a661b8fcb37ea1L).optional(false).ordered(true).multiple(false).origin("7550366242933743822").done();
    b.aggregate("importStatement", 0x68c84a182a2aa0cfL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x35a661b8fcb327eaL).optional(false).ordered(true).multiple(false).origin("7550366242933743823").done();
    b.alias("import_from");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFromStatementAsName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "FromStatementAsName", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x68c84a182a2b2945L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6658c91bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/7550366242933778757");
    b.version(2);
    b.aggregate("dottedName", 0x68c84a182a2b2946L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x35a661b8fcb37ea1L).optional(false).ordered(true).multiple(false).origin("7550366242933778758").done();
    b.aggregate("importAsStatement", 0x68c84a182a2b2947L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x68c84a182a2a1159L).optional(false).ordered(true).multiple(false).origin("7550366242933778759").done();
    b.alias("import_from_as_name");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImportStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "ImportStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x35a661b8fcb327eaL);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6658c91bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/3865884777285625834");
    b.version(2);
    b.aggregate("dottedName", 0x35a661b8fcb32ec0L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x35a661b8fcb37ea1L).optional(false).ordered(true).multiple(false).origin("3865884777285627584").done();
    b.alias("import_name");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImportStatementAsName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "ImportStatementAsName", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x68c84a182a2a1159L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6658c91bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/7550366242933707097");
    b.version(2);
    b.aggregate("dottedName", 0x68c84a182a2a115aL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x35a661b8fcb37ea1L).optional(false).ordered(true).multiple(false).origin("7550366242933707098").done();
    b.aggregate("asName", 0x68c84a182a2a1175L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac74a5a6L).optional(false).ordered(true).multiple(false).origin("7550366242933707125").done();
    b.alias("import_as_name");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "Name", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x35a661b8fcb327edL);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonNode", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee66582d22L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/3865884777285625837");
    b.version(2);
    b.property("name", 0x35a661b8fcb35122L).type(PrimitiveTypeId.STRING).origin("3865884777285636386").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonArrayExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonArrayExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac8202b5L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5289828217392333493");
    b.version(2);
    b.aggregate("elements", 0x49693ebcac8202b8L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(true).ordered(true).multiple(true).origin("5289828217392333496").done();
    b.alias("[");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonAssignmentExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonAssignmentExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac78769cL);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5289828217391707804");
    b.version(2);
    b.property("operator", 0x49693ebcac787dd2L).type(MetaIdFactory.dataTypeId(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac787c48L)).origin("5289828217391709650").done();
    b.aggregate("left", 0x49693ebcac78769dL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac786f66L).optional(false).ordered(true).multiple(false).origin("5289828217391707805").done();
    b.aggregate("right", 0x49693ebcac78769fL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(false).ordered(true).multiple(false).origin("5289828217391707807").done();
    b.alias("=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonBinaryExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonBinaryExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac6897dfL);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5289828217390667743");
    b.version(2);
    b.property("operator", 0x49693ebcac6897e0L).type(MetaIdFactory.dataTypeId(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac683be2L)).origin("5289828217390667744").done();
    b.aggregate("left", 0x49693ebcac6897e2L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(false).ordered(true).multiple(false).origin("5289828217390667746").done();
    b.aggregate("right", 0x49693ebcac6897e4L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(false).ordered(true).multiple(false).origin("5289828217390667748").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonCallExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonCallExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x4e7b579a8878efbeL);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5655210078319996862");
    b.version(2);
    b.aggregate("callee", 0x4e7b579a8878efbfL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac74a5a6L).optional(false).ordered(true).multiple(false).origin("5655210078319996863").done();
    b.aggregate("argumets", 0x4e7b579a8878efc1L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(true).ordered(true).multiple(true).origin("5655210078319996865").done();
    b.alias("call");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonClassStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonClassStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x4e7b579a88a8e92bL);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6658c91bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5655210078323140907");
    b.version(2);
    b.aggregate("className", 0x4e7b579a88aa3297L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac74a5a6L).optional(false).ordered(true).multiple(false).origin("5655210078323225239").done();
    b.aggregate("memberFunctions", 0x4e7b579a88aa3299L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x4e7b579a886a1ceeL).optional(false).ordered(true).multiple(true).origin("5655210078323225241").done();
    b.alias("class");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonElseIfStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonElseIfStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x4e7b579a88263dd7L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonNode", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee66582d22L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5655210078314577367");
    b.version(2);
    b.aggregate("test", 0x4e7b579a88264f3fL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(true).ordered(true).multiple(false).origin("5655210078314581823").done();
    b.aggregate("consequent", 0x4e7b579a88264f41L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6658c91bL).optional(true).ordered(true).multiple(true).origin("5655210078314581825").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonNode", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee66582d22L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5102513431032467563");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonExpressionStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonExpressionStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee665dbe61L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6658c91bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5102513431032741473");
    b.version(2);
    b.aggregate("expression", 0x46cfc4ee665dbe62L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(false).ordered(true).multiple(false).origin("5102513431032741474").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonForStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x4e7b579a889ab886L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonIndentBlockStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac9426e0L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5655210078322210950");
    b.version(2);
    b.aggregate("expression", 0x4e7b579a889ab889L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(false).ordered(true).multiple(false).origin("5655210078322210953").done();
    b.aggregate("identifiers", 0x4e7b579a889ab88bL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac74a5a6L).optional(false).ordered(true).multiple(true).origin("5655210078322210955").done();
    b.aggregate("elseBlk", 0x4e7b579a889ab88eL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac9426e0L).optional(true).ordered(true).multiple(false).origin("5655210078322210958").done();
    b.alias("for");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonFunctionDefinitionStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonFunctionDefinitionStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x4e7b579a886a1ceeL);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6658c91bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5655210078319025390");
    b.version(2);
    b.aggregate("id", 0x4e7b579a886a1cf1L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac74a5a6L).optional(true).ordered(true).multiple(false).origin("5655210078319025393").done();
    b.aggregate("params", 0x4e7b579a886a1cf3L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac74a5a6L).optional(true).ordered(true).multiple(true).origin("5655210078319025395").done();
    b.aggregate("body", 0x4e7b579a886a1cf6L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac9426e0L).optional(false).ordered(true).multiple(false).origin("5655210078319025398").done();
    b.alias("def");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonIdentifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonIdentifier", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac74a5a6L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonNode", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee66582d22L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac786f66L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5289828217391457702");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonIdentifierReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonIdentifierReference", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x4e7b579a882ea95dL);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL);
    b.parent(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac786f66L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5655210078315129181");
    b.version(2);
    b.associate("identifier", 0x4e7b579a882ea95eL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac74a5a6L).optional(false).origin("5655210078315129182").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonIfElseStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonIfElseStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x4e7b579a88263da6L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonIndentBlockStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac9426e0L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5655210078314577318");
    b.version(2);
    b.aggregate("discriminant", 0x4e7b579a8827c51eL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(false).ordered(true).multiple(false).origin("5655210078314677534").done();
    b.aggregate("elseBlk", 0x4e7b579a88263da9L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x4e7b579a88263dd7L).optional(true).ordered(true).multiple(true).origin("5655210078314577321").done();
    b.alias("if");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonIndentBlockStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonIndentBlockStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac9426e0L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6658c91bL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5289828217393522400");
    b.version(2);
    b.aggregate("body", 0x49693ebcac9426e3L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6658c91bL).optional(false).ordered(true).multiple(true).origin("5289828217393522403").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonLeftHandSideExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonLeftHandSideExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac786f66L);
    b.interface_();
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5289828217391705958");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonLiteral", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee665e56a1L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5102513431032780449");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonLogicalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonLogicalExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac6ca205L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5289828217390932485");
    b.version(2);
    b.property("operator", 0x49693ebcac6d2bb5L).type(MetaIdFactory.dataTypeId(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac6c9abdL)).origin("5289828217390967733").done();
    b.aggregate("left", 0x49693ebcac6d2bb7L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(false).ordered(true).multiple(false).origin("5289828217390967735").done();
    b.aggregate("right", 0x49693ebcac6d2bb9L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(false).ordered(true).multiple(false).origin("5289828217390967737").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonMemberExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonMemberExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x4e7b579a88ab8976L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL);
    b.parent(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac786f66L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5655210078323313014");
    b.version(2);
    b.aggregate("object", 0x4e7b579a88ab8977L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(false).ordered(true).multiple(false).origin("5655210078323313015").done();
    b.aggregate("identifierProperty", 0x4e7b579a88ab897bL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac74a5a6L).optional(true).ordered(true).multiple(false).origin("5655210078323313019").done();
    b.aggregate("expressionProperty", 0x4e7b579a88ab897eL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(true).ordered(true).multiple(false).origin("5655210078323313022").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonNode", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee66582d22L);
    b.class_(false, false, false);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5102513431032376610");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonNumericLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonNumericLiteral", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee665e56a0L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonLiteral", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee665e56a1L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5102513431032780448");
    b.version(2);
    b.property("value", 0x46cfc4ee665e56a2L).type(MetaIdFactory.dataTypeId(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee665e569fL)).origin("5102513431032780450").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonObjectExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonObjectExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac858709L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5289828217392563977");
    b.version(2);
    b.aggregate("properties", 0x49693ebcac85870aL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac84b577L).optional(true).ordered(true).multiple(true).origin("5289828217392563978").done();
    b.alias("{");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonProgram() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonProgram", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x35a661b8fcb327e9L);
    b.class_(false, false, true);
    b.super_("com.juliuscanute.python.structure.PythonNode", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee66582d22L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/3865884777285625833");
    b.version(2);
    b.aggregate("body", 0x46cfc4ee6658f416L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6658c91bL).optional(true).ordered(true).multiple(true).origin("5102513431032427542").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonProperty", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac84b577L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonNode", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee66582d22L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5289828217392510327");
    b.version(2);
    b.aggregate("key", 0x49693ebcac84b578L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac6e840aL).optional(false).ordered(true).multiple(false).origin("5289828217392510328").done();
    b.aggregate("value", 0x49693ebcac84b57aL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(false).ordered(true).multiple(false).origin("5289828217392510330").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonReturnStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonReturnStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x4e7b579a887303ffL);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6658c91bL);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5655210078319608831");
    b.version(2);
    b.aggregate("argument", 0x4e7b579a88730400L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(true).ordered(true).multiple(false).origin("5655210078319608832").done();
    b.alias("return");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6658c91bL);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonNode", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee66582d22L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5102513431032416539");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonStringLiteral() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonStringLiteral", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac6e840aL);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonLiteral", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee665e56a1L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5289828217391055882");
    b.version(2);
    b.property("doubleQuotedValue", 0x49693ebcac6e840bL).type(MetaIdFactory.dataTypeId(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x6b3be8de93319e1cL)).origin("5289828217391055883").done();
    b.property("singleQuotedValue", 0x49693ebcac6e840dL).type(MetaIdFactory.dataTypeId(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x6b3be8de93319f1dL)).origin("5289828217391055885").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonTupleExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonTupleExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x4e7b579a8896f590L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5655210078321964432");
    b.version(2);
    b.aggregate("elements", 0x4e7b579a8896f5baL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(true).ordered(true).multiple(true).origin("5655210078321964474").done();
    b.alias("(");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonUnaryExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonUnaryExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee66599075L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonExpression", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5102513431032467573");
    b.version(2);
    b.property("operator", 0x46cfc4ee66599076L).type(MetaIdFactory.dataTypeId(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906cL)).origin("5102513431032467574").done();
    b.aggregate("argument", 0x46cfc4ee66599078L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(false).ordered(true).multiple(false).origin("5102513431032467576").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonVariableDeclarator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonVariableDeclarator", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac75abe5L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonNode", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee66582d22L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5289828217391524837");
    b.version(2);
    b.aggregate("id", 0x49693ebcac75abe6L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac74a5a6L).optional(false).ordered(true).multiple(false).origin("5289828217391524838").done();
    b.aggregate("init", 0x49693ebcac75abe8L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(true).ordered(true).multiple(false).origin("5289828217391524840").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPythonWhileStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("com.juliuscanute.python", "PythonWhileStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac94e877L);
    b.class_(false, false, false);
    b.super_("com.juliuscanute.python.structure.PythonIndentBlockStatement", 0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac9426e0L);
    b.origin("r:00f94cb7-1749-461e-9045-70eb5d47fa62(com.juliuscanute.python.structure)/5289828217393571959");
    b.version(2);
    b.aggregate("test", 0x49693ebcac94e878L).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x46cfc4ee6659906bL).optional(false).ordered(true).multiple(false).origin("5289828217393571960").done();
    b.aggregate("elseBlk", 0x49693ebcac9d00faL).target(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac9426e0L).optional(true).ordered(true).multiple(false).origin("5289828217394102522").done();
    b.alias("while");
    return b.create();
  }
}
