package com.juliuscanute.python.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class PythonIfElseStatement_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("if ");
    tgs.appendNode(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.discriminant$h4k4));
    tgs.append(" :");
    tgs.newLine();
    ctx.getBuffer().area().increaseIndent();
    for (SNode statement : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.body$LHHG))) {
      tgs.indent();
      tgs.appendNode(statement);
    }
    ctx.getBuffer().area().decreaseIndent();
    for (SNode blk : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.elseBlk$hAA1))) {
      tgs.appendNode(blk);
    }
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink discriminant$h4k4 = MetaAdapterFactory.getContainmentLink(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x4e7b579a88263da6L, 0x4e7b579a8827c51eL, "discriminant");
    /*package*/ static final SContainmentLink body$LHHG = MetaAdapterFactory.getContainmentLink(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x49693ebcac9426e0L, 0x49693ebcac9426e3L, "body");
    /*package*/ static final SContainmentLink elseBlk$hAA1 = MetaAdapterFactory.getContainmentLink(0x3b1a18ff6fd44977L, 0xba7ea7ddc907c639L, 0x4e7b579a88263da6L, 0x4e7b579a88263da9L, "elseBlk");
  }
}
